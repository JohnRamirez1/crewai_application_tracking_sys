
resume_parsing_task:
  description: >
    Parse and summarize a candidate's resume (PDF or DOCX).

    Extract key personal and professional information relevant for evaluating the candidate.
    Focus on:
    - Identifying name
    - Writing a professional summary that includes total years of experience, education, and certifications
    - Listing relevant skills

    CANDIDATE RESUME
    ----------------
    {resume_text}

    ADDITIONAL INSTRUCTIONS
    -----------------------
    Your output MUST be a valid JSON with these fields:
    - "name": Candidate's full name (used as unique identifier)
    - "email": The candidate’s email address (if available)
    - "bio": A concise paragraph including total years of experience, education, and certifications
    - "skills": List of key skills (from resume or inferred)

  expected_output: >
    A structured JSON object with the following keys only: candidate_id, name, summary, skills.
    Do NOT include explanations, markdown, or additional commentary.
  agent: resume_parser_agent
  instruction: >
    After extracting the candidate information, use the `save_to_csv` tool
    to save the parsed output as a CSV entry.

resume_keyword_extraction_task:
  description: >
    Extract relevant keywords from the candidate’s parsed resume data.

    Focus on identifying any terms related to:
    - Job Titles
    - Skills
    - Technologies
    - Certifications
    - Industry Terminology

    Only include meaningful, non-duplicate keywords.

    INPUT FORMAT
    ------------
    Parsed Resume:
    {
      "name": "John Doe",
      "email": "candidate@example.com",
      "bio": "...",
      "skills": [...]
    }

  expected_output: >
    A JSON object containing:
    - "name": Candidate's full name (used as unique identifier)
    - "keywords": string of commas separated relevant keywords

    Example:
    {
      "id": 123
      "name": "John Doe",
      "keywords": "Python, Project Management, AWS, Scrum, Data Analysis"
    }

    Do not include irrelevant or repeated keywords.
    Output must be valid JSON with only the fields:id, name,keywords.
  agent: resume_keyword_agent
  instruction: >
    After extracting the candidate information, use the `save_to_csv` tool
    to save the parsed output as a CSV entry.
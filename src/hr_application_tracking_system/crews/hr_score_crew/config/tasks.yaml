matching_task:
  description: >
    Compare the candidate's bio with the provided job description to identify
    aligned and missing elements across the following categories:

    - Skills: Check which required skills from the job description are present in the resume.
      Note any skills that are mentioned but may not meet the expected level or are only tangentially related.
    
    - Experience: Compare years of experience, roles, or industries worked in. Highlight any direct matches or relevant overlaps. 
      Mention gaps where required experience is lacking or not clearly demonstrated.
    
    - Education: Check if the educational background in the resume meets or exceeds the job’s minimum requirements.
      Highlight partial matches or equivalent degrees if applicable.


    CANDIDATE BIO
    -------------
    id: {id}
    name: {name}
    email: {email}
    bio: {bio}
    skills: {skills}
    Keywords: {keywords}


    JOB DESCRIPTION
    ---------------
    {job_description}
    {additional_instructions}

    ADDITIONAL INSTRUCTIONS
    -----------------------
    The output must include:
    - id: The candidate's id.
    - name: The candidate's full name.
    - email: The candidate's email.
    - structured_comparison_summary: A brief but structured explanation covering:
      - What is matched between the candidate bio and job description
      - What is missing or partially aligned
      - Contextual notes (e.g., "skill mentioned but not at required level")
      - {additional_instructions}
      
  expected_output: >
    A valid JSON object containing only the fields: id,name, email, structured_comparison_summary.
    Ensure clarity and relevance in the summary without scoring or evaluative language.
  agent: matching_algorithm

resume_scoring_task:
  description: >
    Using the structured structured comparison summary, compute a numeric score evaluating each candidate's 
    fit for the role. Assess the resume based on three main criteria: education, experience and skills. 
    Each criterion should be scored independently based on how well it matches the job requirements.

    The output must include the following fields:
    - id: The candidate's id
    - name: The candidate's full name
    - email: The candidate's email
    - education_score: Subtotal (0–100) for education alignment
    - experience_score: Subtotal (0–100) for alignment with required experience
    - skills_score: Subtotal (0–100) for alignment with job-required skills
    - final_score: Normalized total score (0–100), based on the weighted sum of the above scores
    - reasoning: Explanation of how the final score was derived, including strengths and weaknesses
    - feedback: Actionable suggestions for improving fit
  expected_output: >
    A valid JSON object including only the fields: id, name, email, education_score, experience_score,
    skills_score, final_score, reasoning, and feedback.
  agent: scoring_system

